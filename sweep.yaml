# Sweep AI turns bugs & feature requests into code changes (https://sweep.dev)
# For details on our config file, check out our docs at https://docs.sweep.dev/usage/config
rules:
- "Add descriptive docstrings to modules and their public functions for clarity."
- "Keep all docstrings and comments updated for easy understanding."
- "Include docstrings for functions to aid interpretation."
- "Ensure all new code comes with corresponding easy-to-understand unit tests."
- "Write unit tests for new code within."
- "Refactor or optimize inefficient or repeated code for better comprehension and efficiency."
- "Develop code for use on consumer hardware and with open-source-software."
- "Redirect debug information to a log file for seamless and persistent debugging."
- "Adhere to the PEP8 style guide for consistent Python code readability."

branch: 'passing'
gha_enabled: True
description: 'github.com/MOONLAPSED/cognosis, an evolving OS-level application designed for Linux that aims to provide a more-coherent way to interact with deamons, processes, and other UFS-objects on Linux and via APIs to the wider-web (and in-between application components)'
draft: False
blocked_dirs: "/.gloss/"
docs:
  PyGitHub: "We use PyGitHub @ https://pygithub.readthedocs.io/en/latest/"
  Linux_kernel: "We use Linux_kernel @ https://www.kernel.org/doc/html/latest/index.html"
  ELF_files: "We use ELF_files @ https://flint.cs.yale.edu/cs422/doc/ELF_Format.pdf"
  LLVM: "We use LLVM @ https://llvm.org/docs/CommandGuide/index.html"
  gcc: "We use gcc @ https://gcc.gnu.org/onlinedocs/gcc/"
  AGiXT: "We use AGiXT @ https://github.com/Josh-XT/AGiXT"
  VLLM: "We use VLLM @ https://vllm.readthedocs.io/en/latest/"
  Nvidia_NeMo: "We use Nvidia_NeMo @ https://docs.nvidia.com/deeplearning/nemo/user-guide/docs/en/stable/"
  Transformers: "We use Transformers @ https://huggingface.co/docs/transformers/main_classes/model"
  Backus_Naur_form: "We use augmented BNF packets from RFC2616 @ https://datatracker.ietf.org/doc/html/rfc2616#section-2.1"

sandbox:
  install:
    - trunk init
  check:
    - trunk fmt {file_path} || return 0
    - trunk check --fix --print-failures {file_path}

Research_targets:
  - "What abstraction exists (at the kernel-level of a linux os) which may allow us to break the Halting Problem for an affiliated agent but not quantum irreducibility and/or thermodynamics or entropy?"
  - "Draft an algorithm in the control theory sense that tricks the Halting Problem while respecting universal constants."
  - "Develop an axiomatic algorithm for our runtime agent that abstracts from hardware to avoid the halting situation."
  - "Research and implement parallel computing techniques for optimization, including SIMD, MPI, threading, and efficient CPU core utilization."
  - "For example: SIMD, (gnu) parallel, mpi, threads, and systemd."
  - "Study the available docs! They are all about different but pertinent software that has been there and done that!"
